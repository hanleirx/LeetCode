class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new ArrayList<>();
        backtracing(res, new ArrayList<>(), k, n, 1);
        return res;
    }

    private void backtracing(List<List<Integer>> res, List<Integer> list, int k, int n, int start){
        if(k == 0 && n == 0){
            res.add(new ArrayList<>(list));
            return;
        }
        if(k == 0 || n == 0){
            return;
        }
        for(int i = start; i <= 9; i++){
            if(i <= n){
                list.add(i);
                backtracing(res, list, k - 1, n - i, i + 1);
                list.remove(list.size() - 1);
            }
        }
    }
}