class Solution {
    public boolean exist(char[][] board, String word) {
        char[] words = word.toCharArray();
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(dfs(words, board, i, j, 0)){
                    return true;
                }
            }
        }
        return false;
    }

    private boolean dfs(char[] words, char[][] board, int i, int j, int index){
        if(i < 0 || i > board.length - 1 || j < 0 || j > board[0].length -1 || words[index] != board[i][j]){
            return false;
        }
        if(index == words.length -1){
            return true;
        }
        char tmp = board[i][j];
        board[i][j] = '.';
        boolean res = dfs(words, board, i + 1, j, index + 1) || dfs(words, board, i - 1, j, index + 1) || dfs(words, board, i, j + 1, index + 1) || dfs(words, board, i, j - 1, index + 1);
        board[i][j] = tmp;
        return res;
    }
}