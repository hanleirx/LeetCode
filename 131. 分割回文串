class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        backtracing(res, new ArrayList<>(), s);
        return res;
    }

    private void backtracing(List<List<String>> res, List<String> list, String s){
        if(s.length() == 0){
            res.add(new ArrayList<>(list));
            return;
        }
        for(int i = 0; i < s.length(); i++){
            if(isPalindrome(0, i, s)){
                list.add(s.substring(0, i + 1));
                backtracing(res, list, s.substring(i + 1));
                list.remove(list.size() -1);
            }
        }
    }

    private boolean isPalindrome(int begin, int end, String s){
        while(begin < end){
            if(s.charAt(begin++) != s.charAt(end--)){
                return false;
            }
        }
        return true;
    }
}